{
	"uprop : AbilitySystemComponent": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Abilities\")",
			"\tUAbilitySystemComponent* $1;",
			"\n$0"
		],
		"prefix": "uprop_abilitysyscomp",
		"description": ""
	},
	"uprop: TextBlock": {
		"body": [
			"UPROPERTY(meta = (BindWidget))",
			"\tUTextBlock* CurrentDialogue;",
			"\n$0"
		],
		"prefix": "uprop_textblock",
		"description": "Adds UPROPERTY()"
	},
	"uprop : AISightConfigData": {
		"body": [
			"UPROPERTY(EditAnywhere, AdvancedDisplay, BlueprintReadWrite, Category=\"AI\")",
			"\tclass UAISenseConfig_Sight* SightConfig;",
			"\n$0"
		],
		"description": "Configure this in class body to give sight to bot.",
		"prefix": "uprop_ai_sightconfig"
	},
	"uprop : Base": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Parameters\")",
			"\t$1;",
			"\n$0"
		],
		"prefix": "uprop"
	},
	"uprop : Boolean": {
		"body": [
			"UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category=\"Parameters\")",
			"\tbool $1;",
			"\n$0"
		],
		"prefix": "uprop_bool"
	},
	"uprop : Boolean switch": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Triggers\")",
			"\tbool $1 = false; // context",
			"\n$0"
		],
		"prefix": "uprop_switch"
	},
	"uprop : Boolean switch (In Advanced View)": {
		"body": [
			"UPROPERTY(EditAnywhere, AdvancedDisplay, BlueprintReadWrite, Category=\"Triggers\")",
			"\tbool $1 = false; // context",
			"\n$0"
		],
		"description": "Adds a boolean switch property(In Advanced dropdown).",
		"prefix": "uprop_switch_adv"
	},
	"uprop : Box Component": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Parameters\")",
			"\tUBoxComponent* $1;",
			"\n$0"
		],
		"prefix": "uprop_box"
	},
	"uprop : Floating point": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Parameters\")",
			"\tfloat $1;",
			"\n$0"
		],
		"prefix": "uprop_float"
	},
	"uprop : GUID": {
		"body": ["UPROPERTY(BlueprintReadWrite, VisibleAnywhere)", "\tFGuid guid;", "$0"],
		"prefix": "uprop_guid"
	},
	"uprop : Integer": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Parameters\")",
			"\tint $1;",
			"$0"
		],
		"prefix": "uprop_int"
	},
	"uprop : ISMC Array": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Parameters\")",
			"\tTArray<UInstancedStaticMeshComponent*> $1;",
			"\n$0"
		],
		"description": [
			"Adds a public TMap of ISMC. Useful for combining parts procedurally, while building dungeons, castles, walls etc."
		],
		"prefix": "uprop_ismc_arr"
	},
	"uprop : ISMC Map": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Parameters\")",
			"\tTMap<int, UInstancedStaticMeshComponent*> $1;",
			"\n$0"
		],
		"description": [
			"Adds a public TMap of ISMC. Useful for combining parts procedurally, while building dungeons, castles, walls etc."
		],
		"prefix": "uprop_ismc_map"
	},
	"uprop : ISMC Map (Advanced Display)": {
		"body": [
			"UPROPERTY(EditAnywhere, AdvancedDisplay, BlueprintReadWrite, Category=\"Parameters\")",
			"\tTMap<int, UInstancedStaticMeshComponent*> $1;",
			"\n$0"
		],
		"description": [
			"Adds a public TMap of ISMC(In the AdvancedDisplay dropdown). Useful for combining parts procedurally, while building dungeons, castles, walls etc."
		],
		"prefix": "uprop_ismc_map_adv"
	},
	"uprop : ISMC property": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Parameters\")",
			"\tUInstancedStaticMeshComponent *$1;",
			"\n$0"
		],
		"description": [
			"Adds an Instanced Static Mesh Component property",
			"(Editable anywhere) Not recommended. try using maps/arrays.",
			"Also use _adv to make property editor readonly."
		],
		"prefix": "uprop_ismc"
	},
	"uprop : ReadOnly": {
		"body": [
			"UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category=\"Parameters\")",
			"\t$1;",
			"\n$0"
		],
		"prefix": "uprop_ro"
	},
	"uprop : Single Spline": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = \"Parameters\")",
			"USplineComponent *MySpline;"
		],
		"description": ["a single spline"],
		"prefix": "uprop_spline"
	},
	"uprop : Sphere Component": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Parameters\")",
			"\tUSphereComponent* $1;",
			"\n$0"
		],
		"prefix": "uprop_sphere"
	},
	"uprop : SplineComponent": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Parameters\")",
			"\tUSplineComponent* $1;",
			"\n$0"
		],
		"description": ["An array of spline components"],
		"prefix": "uprop_splinearray"
	},
	"uprop : SplineComponent Array": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Parameters\")",
			"\tTArray<USplineComponent*> $1;",
			"\n$0"
		],
		"description": ["An array of spline components"],
		"prefix": "uprop_splinearray"
	},
	"uprop : SplineComponent Map": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Parameters\")",
			"\tTMap<int, USplineComponent*> $1;",
			"\n$0"
		],
		"description": ["A map of Spline components."],
		"prefix": "uprop_splinemap"
	},
	"uprop : StaticMesh": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Parameters\")",
			"\tUStaticMesh *$1;",
			"\n$0"
		],
		"prefix": "uprop_mesh"
	},
	"uprop : StaticMesh Array": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Parameters\")",
			"\tTArray<UStaticMesh*> $1;",
			"\n$0"
		],
		"prefix": "uprop_mesh_array"
	},
	"uprop : StaticMesh Map": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Parameters\")",
			"\tTMap<int, UStaticMesh*> $1;",
			"\n$0"
		],
		"prefix": "uprop_meshmap"
	},
	"uprop : StaticMesh Map(In advanced dropdown)": {
		"body": [
			"UPROPERTY(VisibleAnywhere, AdvancedDisplay, BlueprintReadWrite, Category=\"Parameters\")",
			"\tTMap<int, UStaticMesh*> $1;",
			"\n$0"
		],
		"description": ["Adds a mesh map to property list.", "Use "],
		"prefix": "uprop_meshmap_ro"
	},
	"uprop : StaticMeshComponent": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Parameters\")",
			"\tUStaticMeshComponent *$1;",
			"\n$0"
		],
		"prefix": "uprop_meshcomp"
	},
	"uprop : String": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Triggers\")",
			"\tFString $1;",
			"\n$0"
		],
		"description": "Adds a FString property.",
		"prefix": "uprop_string"
	},
	"uprop : Timer(Handle + Del)": {
		"body": ["FTimerDelegate Del$1; // context", "FTimerHandle Handle$1;"],
		"prefix": "uprop_timer"
	},
	"uprop : Transform": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Parameters\")",
			"\tFTransform $1;",
			"\n$0"
		],
		"prefix": "uprop_transform"
	},
	"uprop : Transform Array": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Parameters\")",
			"\tTArray<FTransform> $1",
			"\n$0"
		],
		"prefix": "uprop_transform_array"
	},
	"uprop : Transform Map": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Parameters\")",
			"\tTMap<int, FTransform*> $1;",
			"\n$0"
		],
		"prefix": "uprop_transform_map"
	},
	"uprop : Vector": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Parameters\")",
			"\tFVector $1;",
			"\n$0"
		],
		"prefix": "uprop_vector"
	},
	"uprop : Vector Array": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Parameters\")",
			"\tTArray<FVector> $1;",
			"\n$0"
		],
		"prefix": "uprop_vector_array"
	},
	"uprop : Vector Map": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Parameters\")",
			"\tTMap<int, FVector> $1;",
			"\n$0"
		],
		"prefix": "uprop_vector_map"
	},
	"uprop : Asset Pointer": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Parameters\")",
			"\tTAssetPtr<$2> $1;",
			"\n$0"
		],
		"prefix": "uprop_assetptr"
	},
	"uprop : Subclass": {
		"body": [
			"UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Parameters\")",
			"\tTAssetSubclassOf<$2> $1; // context",
			"\n$0"
		],
		"prefix": "uprop_subclass",
		"description": "Used to get references to blueprints. Activate context to get initializer."
	}
}
